{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Week 1_Bagian 5_Tugas ML","provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tLrYox8Jejdw","executionInfo":{"status":"ok","timestamp":1636284374823,"user_tz":-420,"elapsed":23124,"user":{"displayName":"Adine Nayla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjYi07gisTxH0xAk6xAscj3mFPQX-ZV_E3YGsX9Yg=s64","userId":"18309769385767151909"}},"outputId":"7493e2b3-df25-4174-83ab-97cf96e01fe5"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"h6-4E5ghfPuC","executionInfo":{"status":"ok","timestamp":1636284382049,"user_tz":-420,"elapsed":3324,"user":{"displayName":"Adine Nayla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjYi07gisTxH0xAk6xAscj3mFPQX-ZV_E3YGsX9Yg=s64","userId":"18309769385767151909"}},"outputId":"3b9c6d50-fc02-464a-9b47-49685e2c3360"},"source":["import pandas as pd\n","from sklearn.metrics import mean_absolute_error\n","from sklearn.model_selection import train_test_split\n","from sklearn.tree import DecisionTreeRegressor\n","iowa_file_path ='/content/drive/MyDrive/Colab Notebooks/Tugas ML/Colab ML/Colab/train.csv'\n","\n","## Recap\n","home_data = pd.read_csv(iowa_file_path)\n","y = home_data.SalePrice\n","features = ['LotArea', 'YearBuilt', '1stFlrSF', '2ndFlrSF', 'FullBath', 'BedroomAbvGr', 'TotRmsAbvGrd']\n","X = home_data[features]\n","train_X, val_X, train_y, val_y = train_test_split(X, y, random_state=1)\n","iowa_model = DecisionTreeRegressor(random_state=1)\n","iowa_model.fit(train_X, train_y)\n","val_predictions = iowa_model.predict(val_X)\n","val_mae = mean_absolute_error(val_predictions, val_y)\n","print(\"Validation MAE when not specifying max_leaf_nodes: {:,.0f}\".format(val_mae))\n","iowa_model = DecisionTreeRegressor(max_leaf_nodes=100, random_state=1)\n","iowa_model.fit(train_X, train_y)\n","val_predictions = iowa_model.predict(val_X)\n","val_mae = mean_absolute_error(val_predictions, val_y)\n","print(\"Validation MAE for best value of max_leaf_nodes: {:,.0f}\".format(val_mae))"],"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Validation MAE when not specifying max_leaf_nodes: 29,653\n","Validation MAE for best value of max_leaf_nodes: 27,283\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"95993_NQfrNc","executionInfo":{"status":"ok","timestamp":1636284389801,"user_tz":-420,"elapsed":1161,"user":{"displayName":"Adine Nayla","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjYi07gisTxH0xAk6xAscj3mFPQX-ZV_E3YGsX9Yg=s64","userId":"18309769385767151909"}},"outputId":"14168f45-2cd6-430d-806a-02aaf513becb"},"source":["## Use a Random Forest\n","from sklearn.ensemble import RandomForestRegressor\n","rf_model = RandomForestRegressor(random_state=1)\n","rf_model.fit(train_X, train_y)\n","rf_val_predictions = rf_model.predict(val_X)\n","rf_val_mae = mean_absolute_error(rf_val_predictions, val_y)\n","print(\"Validation MAE for Random Forest Model: {}\".format(rf_val_mae))"],"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Validation MAE for Random Forest Model: 21857.15912981083\n"]}]}]}